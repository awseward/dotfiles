#!/usr/bin/env oil

# USAGE
#
# iar 'https://example.com/foo/bar?baz=42'
#
#   • This will return the latest capture if one exists, otherwise will create
#     one
#
#
# FORCE=true iar 'https://example.com/foo/bar?baz=42'
#
#   • This will force a capture to be created, whether or not any captures
#     already exist
#

const green = $'\e[0;92m'
const red   = $'\e[0;91m'
const reset = $'\e[0m'

proc _check(url, force='false') {
  if test $force == 'true' {
    >&2 echo 'Archive forced; skipping check for existing capture…'
    return 1
  }

  >&2 echo "Checking for captures of ${url}…"
  curl --fail --head "https://web.archive.org/web/${url}" \
    | grep -i '^location: '\
    | head -n1 \
    | awk '{ print $2 }'
}

proc _archive(url) {
  >&2 echo "Creating a new capture of ${url}…"
  curl --fail --head "https://web.archive.org/save/${url}" \
    | grep -i '^location: '\
    | head -n1 \
    | awk '{ print $2 }'
}

proc _error(url) {
  >&2 echo -e "${red}Unable to save URL to Internet Archive:${reset} ${url}"
  return 1
}

proc _run(url, force) {
  const archived_url = $(try _check ${url} ${force} || _archive ${url})
  pbcopy <<< ${archived_url}
  echo -e "${green}Saved to clipboard:${reset} ${archived_url}"
}

# ---

try _run $1 "${FORCE:-}" || _error $1
