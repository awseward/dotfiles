#!/usr/bin/env bash

# This is a little wrapper around code from the following tweet, intended to
# make it just a little bit nicer to use:
#
# https://twitter.com/tenderlove/status/1032299379707863040
#
# Example usage:
#
# slack-banner build 'hello' ':wave:' ':transparent:'
#

set -euo pipefail

_warn_if_too_long() {
  local result_length; result_length="$1"
  local max_length; max_length=4000

  if [ "${result_length}" -ge "${max_length}" ]; then
    >&2 cat <<ERR
WARNING: Max Slack message character length: ${max_length} (at the time of authoring, 2019-03-31)
         Your banner's character length: ${result_length}

         It is likely that your banner will not fit as is, unless Slack has
         since increased its character limits per message.
ERR

  fi
}

help() {
  >&2 cat <<-MSG
Usage:

  $(basename "$0") build 'Hello!' ':simple_smile:' ':white_square:'

MSG
  exit 1
}

_prompt() {
  local -r varname="$1"
  local -r default="${2:-}"

  if [ "${default}" = '' ]; then
    >&2 echo -n "Enter $varname: " && read -r val
  else
    >&2 echo -n "Enter $varname (default: '${default}'): " && read -r val
    [ "${val}" = '' ] && val="${default}"
  fi
  readonly val

  echo "${val}"
}

_ensure_colons() { sed -e 's/^:*// ; s/:*$//' | xargs -I{} echo ':{}:' ; }

_render() {
  figlet -f banner "${msg}" \
    | grep -v -E '^\s*$' \
    | sed -e "s/\ \{1\}$// ; s/\#/${fg_emj}/g ; s/\ /${bg_emj}/g"
}


build() {
  msg="${1-"$(_prompt message)"}"
  fg_emj="${2-"$(_prompt 'foreground emoji' | _ensure_colons)"}"
  bg_emj="${3:-"$(_prompt 'background emoji' ':_:' | _ensure_colons)"}"

  local result; result="$(_render "$msg" "$fg_emj" "$bg_emj")"; readonly result
  _warn_if_too_long ${#result}
  pbcopy <<< "${result}"
  >&2 echo -e "\nSlack emoji banner of '${msg}' spelled out with '${fg_emj}' (background: '${bg_emj}') copied to clipboard!"
}

"${@:-build}"
