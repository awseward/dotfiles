#!/usr/bin/env bash

set -euo pipefail

json() {
  timeout -v 5 hub ci-status -f '{"status":"%S","name":"%t","url":"%U"}☆' \
    | awk 'BEGIN{RS="☆"} {print}' \
    | jq "$@"
}

by_name() {
  local -r name="$1"; shift

  # shellcheck disable=SC2016
  json --arg name "$name" "$@" -s '
    map(select($name == .name))
      | first // { status: "not_found", $name, url: null }
  '
}

# Not sure about this but it could go somewhere
foo() {
  local -r name="$1"; shift
  local start_s; start_s="$(date '+%s')"; readonly start_s

  by_name "$name" \
    | jq "$@" \
        --argjson start_s "${start_s}" \
        '(now | floor) as $now_s |
        {
          $start_s,
          $now_s,
          elapsed_s: ($now_s - $start_s),
          current: .
        }'
}

foo2() {
  local output; output="$(
    json -r -s "$@" '
      group_by(.status) | map(sort_by(.name))[] |
        if   all("success" == .status)
        then "success"
        else .
        end
    '
  )"

  if [ "${output}" = 'success' ]; then
    output="\e[0;92m$(figlet "${output}")\e[0m"
  fi
  readonly output

  echo -e "${output}"
}

by_status() {
  local -r status="$1"; shift

  # shellcheck disable=SC2016
  json --arg status "$status" "$@" -s 'map(select($status == .status)) | sort_by(.name)[]'
}

# I'm not really sure what this was supposed to be for, but here it is for
# backwards compatibility
legacy_() { json -r '"\(.status) \(.name)"' | fzf; }

# ---

"${@:-json}"
