#!/usr/bin/env bash

set -euo pipefail

_PREFIX='/usr/local/etc'
_DNSCRYPT_PROXY_DIR="${_PREFIX}/dnscrypt-proxy.d"

_VALID_CMDS=(edit restart start stop system tail)


_join_by() {
  local d=$1
  shift
  echo -n "$1"
  shift
  printf "%s" "${@/#/$d}"
}

_resolve_cmd() {
  # shellcheck disable=SC2199,SC2076
  if [[ ! " ${_VALID_CMDS[@]} " =~ " $1 " ]]; then
    local valid_cs; valid_cs="$(_join_by ', ' "${_VALID_CMDS[@]}")"
    >&2 echo -e "ERROR: Invalid command \`$1\`.\nMust be one of: $valid_cs"
    return 1
  fi

  echo "dnsc_$1"
}

_brew_svc() {
  case "$1" in
    start|stop|restart) : ;;
    *) return 1
  esac

  brew services "$1" dnscrypt-proxy
}

dnsc_edit() { "$EDITOR" "$(command -v dnsc)"; }

dnsc_restart() { _brew_svc restart; }
dnsc_start()   { _brew_svc start;   }
dnsc_stop()    { _brew_svc stop;    }

dnsc_system() { cat /etc/resolv.conf; }

dnsc_tail() {
  local which_log="${1:-}"
  local files

  case "$which_log" in
    app|dnscrypt-proxy)
      files=("$_DNSCRYPT_PROXY_DIR/dnscrypt-proxy.log")
    ;;
    query|nx)
      files=("$_DNSCRYPT_PROXY_DIR/$which_log.log")
    ;;
    '')
      files=("$_DNSCRYPT_PROXY_DIR"/*.log)
    ;;
    *)
      >&2 echo "ERROR: Unknown log \`$which_log\`"
      return 1
    ;;
  esac

  xargs -t tail -f <<< "${files[@]}"
}

DNSC_CMD="$(_resolve_cmd "${1:-}")"

"$DNSC_CMD" "${@:2}"
