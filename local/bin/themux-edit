#!/usr/bin/env bash

set -euo pipefail

session_dir() {
  local -r dirpath="$HOME/.cache/themux-edit/$1"
  mkdir -p "$dirpath"

  echo "$dirpath"
}

conf_for() {
  local dirpath; dirpath="$(session_dir "$1")"; readonly dirpath
  echo "$dirpath/.tmux.conf"
}

conf_dhall_for() {
  local dirpath; dirpath="$(session_dir "$1")"; readonly dirpath
  echo "$dirpath/theme.dhall"
}

render() {
  local -r s_id="$1"
  local conf; conf="$(conf_for "$s_id")"; readonly conf
  local conf_dhall; conf_dhall="$(conf_dhall_for "$s_id")"; readonly conf_dhall

  # This regex replace isn't quite perfect; if any flags are grouped it will
  # likely miss the `-g` part, but I haven't run into that yet, so.
  THEMUX_PACKAGE="$(themux _in_prefixed lib package.dhall)" \
    dhall text <<< "$conf_dhall" \
    | sed -e 's/ -g / /g' \
    > "$conf"
}

source() {
  local -r s_id="$1"
  local conf; conf="$(conf_for "$s_id")"; readonly conf

  >&2 echo "Applying ${conf}â€¦"
  # shellcheck disable=SC2016
  tmux source-file "$conf"
}

render_and_source() { render "$1" && "$0" source "$1"; }

setup() {
  local s_id; s_id="$(uuidgen)"; s_id="${s_id,,}"; readonly s_id
  local conf_dhall; conf_dhall="$(conf_dhall_for "$s_id")"; readonly conf_dhall

  local theme_name; theme_name="$(
    themux list-fzf --header $'Shortcuts:\n^j: up\n^k: down'
  )"; readonly theme_name

  local theme_rendered; theme_rendered="$(
    THEMES="$(themux _in_prefixed etc 'themes.dhall')" \
      THEMUX_PACKAGE="$(themux _in_prefixed lib package.dhall)" \
      dhall <<< "(env:THEMES).$theme_name"
  )"; readonly theme_rendered

  echo '
--
--
-- Save this file to render and apply new tmux config.
-- Exit the editor to close this tmux window.
--
--
let Theme = (env:THEMUX_PACKAGE).Theme in Theme.show Theme::'"$theme_rendered" \
  | THEMUX_PACKAGE="$(themux _in_prefixed lib package.dhall)" dhall format \
  > "$conf_dhall"

  render "$s_id"

  tmux \
    new-window -n 'example window' -- "'$0' source '$s_id' && neofetch && read -r _" \; \
    set-option pane-border-format '#{pane_index} #{pane_pid} (#{pane_height}x#{pane_height}) - #{pane_current_command}' \; \
    split-window -v    -- "'$EDITOR' '$conf_dhall' && '$0' teardown" \; \
    split-window -v -d -- "entr -p -- '$0' render_and_source '$s_id' <<< '$conf_dhall'" \; \
    select-layout main-vertical \; \
    resize-pane -t 0 -R 9999 \; resize-pane -t 0 -L 80 \; \
    resize-pane -t 2 -D 9999 \; resize-pane -t 2 -U 10
}

# This makes a pretty crucial assumption that the current window is the
# temporary one, so it can be killed.
teardown() { tmux kill-window; }

# ---

"${@:-setup}"
